#!/usr/bin/env node
const BackendlessConsole = require('../libs/backendless-console-api.js')
const chalk = require('chalk')
const checkForArguments = require('../utils/checkArgs')
const commandLineArgs = require('command-line-args')
const getUsage = require('command-line-usage')

const util = require('util')
const ansi_banner = require('../libs/constants/command-banner')
const banner = getUsage(ansi_banner)

const compare = require('../libs')

const optionDefinitions = require('../libs/constants/command-options')
const options = commandLineArgs(optionDefinitions).compare

checkForArguments(options)

const {
    'username'           : username,
    'password'           : password,
    'reference'          : appControl,
    'compare'            : appsToCheck,
    'dump'               : dumpPath,
    'reporting-directory': reportingDir,
    'backendless-url'    : beURL,
    'timeout'            : timeout,
    'verbose'            : verboseOutput,
    'silent'             : silent,
    'monitor'            : monitorMode,
    'sync'               : syncMode,
    'check-list'         : checkList
} = options

if (!options.monitor) {
    console.log(banner)
}

Promise.resolve()
    .then(() => compare({
        username, password, appControl, appsToCheck, dumpPath, reportingDir, beURL,
        timeout, verboseOutput, silent, monitorMode, syncMode, checkList
    }))
    .then(() => process.exit(0))
    .catch(err => {
        console.log(util.inspect(err))
        console.log(chalk.bold.red(err))

        process.exit(1)
    })
